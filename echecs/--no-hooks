---
# Source: kubedb/templates/operator-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kubedb-operator
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true  #Allowing privileged pods is necessary for ES db
  allowPrivilegeEscalation: true #Allowing privilege escalation is necessary for ES db
  volumes:
  - "*"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
---
# Source: kubedb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedb-operator
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubedb-operator-apiserver-cert
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRU2M1dHJIejc4dU9yOElVVm02SGlRVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURFeU1UUXlNelF6TURSYUZ3MHpNREV5TVRJeU16UXpNRFJhTUJveApHREFXQmdOVkJBTVREMnQxWW1Wa1lpMXZjR1Z5WVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFLenZGY1p5OTNPNXVVZEk2aE9UZ0p3SzJaNEgwNGw5aXYvdDRzMTcycUpOcjExWWtlYmkKT0lWekxzWGkzdHRCZCtzSTlPdEhSOWJDVmdzMWhVMmt5QWFKMGphSnFMZXFybHFpTFc0czlDRXpZcC84WXkxWQppaG9XTkgyTnJRa2RjRE42clZKUmtjMEFDeFJhdFBRNzhSQmpiSDZ3WUI3REtWRk83VDBpaEYzYlRxd05ncHRsCnpOYnRDRTg0bzg3eHRId1Fzc0R3TEVCVk9SZ1Q1LzFZekdHTnZ5azc2SXloS1hqNDFXMURON1dNTlQ0RXJTU3kKZHVJUVZ3cDhLOUtxSjl4MURyemdkR3BhMm5iNUJ1RkZ2ODlobENvbmFuUUszZis3aFhRZUNIMnhWcktwUUF1SAova2g0SU1XU2xvV09DUGh6YkdqU3BBdTlJUXk0SFhIdEJtc0NBd0VBQWFPQmlUQ0JoakFPQmdOVkhROEJBZjhFCkJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUMKTUFBd1J3WURWUjBSQkVBd1BvSWJhM1ZpWldSaUxXOXdaWEpoZEc5eUxtdDFZbVV0YzNsemRHVnRnaDlyZFdKbApaR0l0YjNCbGNtRjBiM0l1YTNWaVpTMXplWE4wWlcwdWMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNSCk9VMFB2VC9kaUdCbXMyK1pYSDhDZ201N2JuaTVuQm9WVmxJcUpUQkE4NGJDemFzWnZsS2VDR0ZNZmMvSFlXcDEKR0tBajBVclBKUXVldFdnSXhOQ0RWQTVTalc1cERJbXlvb1N6QnlZZlphS3ZOVW80Qkl4TUhoTmQyK1B0VjdDdApkdmhiQ1ZGNDBKYUpmd3R1Yy9QSDI4WEFFZ3JYUi9PRUk5bkRIa1pTeGFaakgrUzcySldkUlNub25PM2hSRGkyCmlGUVRVeXBFenR3OUtMbGxVNG96d1lBaENTdU8yenB4UHNFUHNMZnY1clltdWd5dTFuOTdhLzRkSzFkclA5dkoKaTh0clRCT2xUc1BGYTVUMFFGak9QN3ZuWEMzOWxEdXNjZkZidHptRDZHaGFRTUNUdzNIYkZZMEYwdytxRmxvSgowdWxYekRackpQMWZMcHhlWTB3bQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBck84VnhuTDNjN201UjBqcUU1T0FuQXJabmdmVGlYMksvKzNpelh2YW9rMnZYVmlSCjV1STRoWE11eGVMZTIwRjM2d2owNjBkSDFzSldDeldGVGFUSUJvblNOb21vdDZxdVdxSXRiaXowSVROaW4veGoKTFZpS0doWTBmWTJ0Q1Ixd00zcXRVbEdSelFBTEZGcTA5RHZ4RUdOc2ZyQmdIc01wVVU3dFBTS0VYZHRPckEyQwptMlhNMXUwSVR6aWp6dkcwZkJDeXdQQXNRRlU1R0JQbi9Wak1ZWTIvS1R2b2pLRXBlUGpWYlVNM3RZdzFQZ1N0CkpMSjI0aEJYQ253cjBxb24zSFVPdk9CMGFscmFkdmtHNFVXL3oyR1VLaWRxZEFyZC83dUZkQjRJZmJGV3NxbEEKQzRmK1NIZ2d4WktXaFk0SStITnNhTktrQzcwaERMZ2RjZTBHYXdJREFRQUJBb0lCQUN2VytHZzBvUEtmZEk3VAp0ek43UXpGTHR0dFBGSnRZVGpLUE5kM3R0Z0ZMUEZlbnFtVWptRHlNZEtFSjRJRW8yYU9sdzZFWmt1YW9vWE41Ci8rOHRCT0JUZEEwTFhOQWkzc3h2TEtFdm1Ed0tjTWdxRFdKamZhOGJUZmMrUVUxOFB3TnQ2QjVrTzFnQzJNd3kKS29sMzRLYk03YVk0UkVYSUorTks1TzJJb0pIQ0trTk9SRnVuZnpDbkJHdWFkbkptMFF5cTAyNDkvR1l0YUVCWgpucHYxSXg2OS8rTlpsUEo2cGNyOG9ES3p4Vjhab2dVU2JSN1VqMnUyTDBZZklQMVdsRjVqVDU3QVRmWjVMRGp0Cnd3eVl1eEc4OGgwNDFnd2thYlZ3ZmtFRHBnK0c0a2t4ampWRVhmRUxVVTR0TEQ4YUFuaThDekpyU0hSNnNxY3cKQ0RJbSs4RUNnWUVBMHRqU3lWMkxNY3NjdFM1VGhFMjBqUkJRamU3c0VDVVgyVzZGdFlVL1liRGpuUlE2ak5VbgpnMEgzd0FIU0tTYXVxcFk0ZEd2OTVTaktNUGFVOEgxUFRUSWEvWkFvdndXQllaL0l6b2p1U1JGbVBHMXpIR011CmdDU2wxeTlxQmhBWCtaM1JZelJ1RkI0SjVCem1QbXNrRWdaYXZmaWJXQ1ZZOWp5VS9HaUhSanNDZ1lFQTBmZkYKU0tMWVFDSHYvUXZGZ08raldsYlQxYW8xZ0F0dTg4WS9tUmo0VFdKMnNIQUVaNVNZbmRhUjkvL2J6cUVmNTY2cAp3OGZ2SGs3MXl1cExKOG02WEp1QXRrTXZSTjRoRkxhZFdFUXd3eWw0L01yZG5JcnIzcnlDdjRpZ1RQVU94OXpKCjhVSnQ1MzVqZWU1L2Y1TjE3YWgvSHBOZkNaV3BySDZObFBBanpaRUNnWUVBdEtGK1MzWnhOakpNb01kVVUwY0MKdzhyVFNCVUVkWHhocHl1eEx1WTllMkxBVEtTMDJFd1A4cm9FRnFFNHUzcGhMdEZOQWlnMk5pa3d0cXU0d3lLSApXcG52VjRVMTh4Z3pWRUJBRnZobU00RE5kajFKM1dyMnZsOG5HR2VOVEM1amE3eVJVb3pyTlI3YTJHc05zVEcyCmtCNlRoS1pENTBydm9Od2J3dldGMWxzQ2dZQXZjZmFCY0ZLL1F5dndtUzFhOGt1T1NWcDZ5SWhvVTYwUnByV08KU2NjcDdWcjJpWWxsUW4ydUJPTmREOUxDZ1VRdFhSbDlaUHRTZFBNemsvZkJtT0xrdERyRWRMQUV0dER3MWtiOQp3QUxveHNGUkZpSTNrbWkwSHhMSVp2NGFCYkgrVlpUSVVJTjNNT2NYa1YzOEhQMGo0OVE5dTMxWk5CbHdJZlNxCk9BMVBFUUtCZ0NYMmtOeCtvb0RYaUorYkpkc09hRnp5eVF0MjZJVVFLS0FnVURaSmRYSGNheEF0T2FoYUNIdlgKNXpwOHhSY25ab1FTQ2k4b1dhOU14S0lxYmxEbXN1RjBlTjFkVXZubWdBenNudUFsV0xmOTJGcHdqT3Z2THRFegpnYVY3YituK2doS1JQa3BxMys5cmd2Z2ZOTDNneWtqdmdHMWw5b2UxWmE0MU4ybkZla2FaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubedb/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb-operator
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - kubedb-operator
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  - restorebatches
  verbs: ["get", "list", "watch"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: kube-system
---
# Source: kubedb/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb-operator
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: kube-system
---
# Source: kubedb/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: kube-system
---
# Source: kubedb/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: kube-system
---
# Source: kubedb/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubedb-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb-operator
  namespace: kube-system
---
# Source: kubedb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubedb-operator
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
---
# Source: kubedb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb-operator
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb
      app.kubernetes.io/instance: kubedb-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb
        app.kubernetes.io/instance: kubedb-operator
      annotations:
        checksum/apiregistration.yaml: 0c425b3a432a1227aa4a31b528a5a405acdc343d2ef9c9dff08a507a5b207920
    spec:
      serviceAccountName: kubedb-operator
      containers:
      - name: operator
        securityContext:
          {}
        image: kubedb/operator:v0.15.2
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-operator-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: kube-system
    name: kubedb-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lSQUxoYmkrem1hY01TdlQyQVVwb2NmblF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBeE1qRTBNak0wTXpBMFdoY05NekF4TWpFeU1qTTBNekEwV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUNjCkx1VVBYQ3dUQTdLVUgzUzA2TDJvdGpERkhJQkhoSysvbGxmbDZRYUowRGtlN1pHblhNNmlSdTJ1UGpza3ZRaysKZXU3K2NoSCsvWWpNcTd2enYzRkFYd09ZSW5KREwwNWlybDlSanNnWjJQd0o3L0xoUW5DcUxGYWNjdEpPSGZvVgpHdDZxTDVjbmFjQnhGWFlwK2FyR2xmV3k1VnVvZTMwN1F1WGVhWUh4d3NtSUVsOGcyZm5Sa3pzV3M5d0lZVGM0CndvbGs0NzNoVk9YWE1zWEI4YU8zRDhTSU1KMHdvcXk0UHhkaWJPOGNBS1h3YjBwT3JiSlhjSU1OY0VIaS9nT0cKUFc5c1JYMGZ5KzZibVptK3VPRkJiVjJiR1l5UkI0SmVhWVhacnA3THZoNVV3cWlQU0pxU2FPMjVZSlhOd3BnbQpJbDFhSWRYY29ZWlVMTFpueWJrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDZTFuY0M5YlJtYWlUS3cxRFNDSndyOUtyMC94TDdUa3FTeCtxdDZRbzlJTHF6ekNXVgpmSXFva2tDUFBiYkY3eDE1QzlCaDZacjZNdDl3b3E2RXdWb0tXWFlpM3VsUmlHM05mSVpWM2RsSkV5eU1yNDhRCllXUEpxakRKWkVYRmNEVnNOaFU5Tjg3Tmk2ZG8zVHJILzMySmt5KzlYajVZRFJuelRmaVZWWHRoK3MyeU1yR2IKalRJQmpGVEp2UEUrdUV1N01uQk5TQTBGNFNsK3R1elF6c0NBdklYQ0F6VnNhN3FpZFgxU2RDVmpsdHZKaEpTQQpyUnJEeWI2d3M0T2ZadlJVMEhtc1Q1aWViZXorT1pKdVlFUHAvRmd0ajJRU1ViZ01Ib1dnZUtTRTRCRko3RUFUCitzb2lzRTRLTFhqVkhGbEQ3aURTeDAwaCtUbHhvRE1sQWozYQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: kube-system
    name: kubedb-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lSQUxoYmkrem1hY01TdlQyQVVwb2NmblF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBeE1qRTBNak0wTXpBMFdoY05NekF4TWpFeU1qTTBNekEwV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUNjCkx1VVBYQ3dUQTdLVUgzUzA2TDJvdGpERkhJQkhoSysvbGxmbDZRYUowRGtlN1pHblhNNmlSdTJ1UGpza3ZRaysKZXU3K2NoSCsvWWpNcTd2enYzRkFYd09ZSW5KREwwNWlybDlSanNnWjJQd0o3L0xoUW5DcUxGYWNjdEpPSGZvVgpHdDZxTDVjbmFjQnhGWFlwK2FyR2xmV3k1VnVvZTMwN1F1WGVhWUh4d3NtSUVsOGcyZm5Sa3pzV3M5d0lZVGM0CndvbGs0NzNoVk9YWE1zWEI4YU8zRDhTSU1KMHdvcXk0UHhkaWJPOGNBS1h3YjBwT3JiSlhjSU1OY0VIaS9nT0cKUFc5c1JYMGZ5KzZibVptK3VPRkJiVjJiR1l5UkI0SmVhWVhacnA3THZoNVV3cWlQU0pxU2FPMjVZSlhOd3BnbQpJbDFhSWRYY29ZWlVMTFpueWJrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDZTFuY0M5YlJtYWlUS3cxRFNDSndyOUtyMC94TDdUa3FTeCtxdDZRbzlJTHF6ekNXVgpmSXFva2tDUFBiYkY3eDE1QzlCaDZacjZNdDl3b3E2RXdWb0tXWFlpM3VsUmlHM05mSVpWM2RsSkV5eU1yNDhRCllXUEpxakRKWkVYRmNEVnNOaFU5Tjg3Tmk2ZG8zVHJILzMySmt5KzlYajVZRFJuelRmaVZWWHRoK3MyeU1yR2IKalRJQmpGVEp2UEUrdUV1N01uQk5TQTBGNFNsK3R1elF6c0NBdklYQ0F6VnNhN3FpZFgxU2RDVmpsdHZKaEpTQQpyUnJEeWI2d3M0T2ZadlJVMEhtc1Q1aWViZXorT1pKdVlFUHAvRmd0ajJRU1ViZ01Ib1dnZUtTRTRCRko3RUFUCitzb2lzRTRLTFhqVkhGbEQ3aURTeDAwaCtUbHhvRE1sQWozYQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
# Source: kubedb/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubedb-operator-cleaner
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: kubedb-operator
      containers:
      - name: busybox
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
             kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; \
             kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.validators.kubedb.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: kubedb/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
---
# Source: kubedb/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.2
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb-operator
    app.kubernetes.io/version: "v0.15.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: namespace.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  failurePolicy: Fail
  sideEffects: None
